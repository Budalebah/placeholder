name: Run tests

on:
  push:
    branches:
      - master
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

env:
  SUITE_REPO: "NilFoundation/crypto3"
  LIB_NAME: "crypto3-zk-marshalling"
  CACHE_NAME: "checkout-job-cache"

jobs:
  handle-syncwith:
    if: github.event_name == 'pull_request'
    name: Call Reusable SyncWith Handler
    uses: NilFoundation/ci-cd/.github/workflows/reusable-handle-syncwith.yml@v1
    with:
      ci-cd-ref: 'v1'
    secrets: inherit

  checkout:
    needs: [ handle-syncwith ]
    runs-on: [self-hosted, tests-runner]
    steps:
      - name: Cleanup # TODO - move to scripts on runner
        run: |
          rm -rf ./* || true
          rm -rf ./.??* || true

      - name: Checkout suite
        uses: actions/checkout@v3
        with:
          repository: ${{ env.SUITE_REPO }}
          submodules: recursive

      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          path: ./libs/marshalling/zk
          submodules: recursive

      - name: Checkout modules to specified refs
        if: needs.handle-syncwith.outputs.prs-refs != ''
        uses: NilFoundation/ci-cd/actions/recursive-checkout@v1
        with:
          paths: |
            ./**
            !./**/.git/**
          refs: ${{ needs.handle-syncwith.outputs.prs-refs }}

      - name: Cmake and build
        env:
          CMAKE_ARGS: "
            -DCMAKE_BUILD_TYPE=Debug
            -DBUILD_SHARED_LIBS=FALSE
            -DBUILD_TESTS=TRUE
            -DZK_PLACEHOLDER_PROFILING=TRUE
            "
        run: |
          mkdir build
          cd build
          cmake ${{ env.CMAKE_ARGS }} ..

      - name: Archive build results
        run: |
          touch ${{ env.CACHE_NAME }}.tar.gz
          tar -czf ${{ env.CACHE_NAME }}.tar.gz --exclude=${{ env.CACHE_NAME }}.tar.gz .

      - name: Cache archived job output
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CACHE_NAME }}
          path: ${{ env.CACHE_NAME }}.tar.gz
          retention-days: 1


  run_tests:
    runs-on: [self-hosted, tests-runner]
    needs: [checkout]
    strategy:
      fail-fast: false
      matrix:
        target: [
          marshalling_fri_commitment_test,
          marshalling_lpc_commitment_test,
          marshalling_placeholder_common_data_test,
          marshalling_placeholder_proof_test,
          marshalling_sparse_vector_test,
          marshalling_accumulation_vector_test,
          marshalling_plonk_constraint_system_test,
          marshalling_plonk_assignment_table_test,
          marshalling_plonk_gates_test,
          marshalling_r1cs_gg_ppzksnark_primary_input_test,
          marshalling_r1cs_gg_ppzksnark_proof_test,
          marshalling_r1cs_gg_ppzksnark_verification_key_test
#         Test should be fixed
#          marshalling_merkle_proof_test
        ]  # Tests to execute
    steps:
      - name: Cleanup # TODO - move to scripts on runner
        run: |
          rm -rf ./* || true
          rm -rf ./.??* || true

      - name: Upload checkout job cache
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.CACHE_NAME }}

      - name: Extract artifacts
        run: |
          tar -xf ${{ env.CACHE_NAME }}.tar.gz
          rm ${{ env.CACHE_NAME }}.tar.gz

      - name: Build
        working-directory: ./build
        run: cmake --build . -t ${{ matrix.target }}

      - name: Run test
        working-directory: ./build
        run: |
          cd libs/marshalling/zk/test
          COLOR='\033[0;33m'
          echo -e "${COLOR}${{ matrix.target }}"
          ./${{ matrix.target }}
